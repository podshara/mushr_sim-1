<launch>
    <!--param name="robot/name" value="$(optenv ROBOT mushr)"/>
    <param name="robot/type" value="mushr"/-->
    <arg name="racecar_version" default="racecar-uw-nano" />
    <arg name="racecar_color" default="" />
    <arg name="model_id" default="" />
    <arg name="map_dir" default="$(find mushr_sim)/maps/" />

    <param name="/map_dir" value="$(arg map_dir)" />

    <group if='$(eval arg("model_id") != "")'>
        <include file="$(find mushr_sim)/launch/teleop.launch">
            <arg name="map" value="$(arg map_dir)/$(arg model_id).yaml" />
        </include>
        <param name="/model_id" value="$(arg model_id)" />
    </group>

    <group if='$(eval arg("model_id") == "")'>
        <rosparam command="load" file="$(find mushr_sim)/config/gibson_sim.yaml" />
        <node pkg="map_server" name="map_server" type="map_server" launch-prefix="/bin/bash -c '$* `rosparam get map_dir`/`rosparam get model_id`.yaml' --" />

        <include file="$(find mushr_sim)/launch/teleop.launch">
            <arg name="map_server" value= "0" />
            <arg name="map" value="$(arg map_dir)/$(arg model_id).yaml" />
        </include>
    </group>

    <param name="robot_description"
         textfile="$(find mushr_description)/robots/$(arg racecar_version)$(arg racecar_color).urdf"/>

    <node name="mushr_gibson_sim" pkg="mushr_sim" type="gibson_sim.py" output="screen">
        <param name="model_id" value="$(arg model_id)" />
    </node>

    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan"  output="screen">
        <param name="scan_height" value="2"/>
        <param name="output_frame_id" value="/car/camera_depth_frame"/>
        <param name="range_min" value="0.45"/>
        <remap from="image" to="/gibson_ros/camera/depth/image"/>
        <remap from="scan" to="/gibson_ros/laserscan"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="cloudify"
            args="load depth_image_proc/point_cloud_xyzrgb record_player_manager --no-bond" output="screen">
        <remap from="depth_registered/image_rect" to="/gibson_ros/camera/depth/image"/>
        <remap from="depth_registered/points" to="/gibson_ros/camera/depth_registered/points"/>
        <remap from="rgb/image_rect_color" to="/gibson_ros/camera/rgb/image"/>
        <remap from="rgb/camera_info" to="/gibson_ros/camera/depth/camera_info"/>
    </node>
</launch>